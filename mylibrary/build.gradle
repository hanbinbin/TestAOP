plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}


def def_groupId = 'com.model.binbin'
def def_artifactId = 'mylibrary'
def def_version = '0.0.9-SNAPSHOT'

//将源码打包，这一点对kotlin来说很重要，否则业务侧无法看到源码
task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

//notice: 就是 components 组件信息，只有在 Gradle 配置完成之后，才能够拿到(纯java项目不需要，直接可使用from components.java导入源文件)，所以在使用的时候，需要放在 afterEvaluate 闭包内。
//        这点一定要注意，我就是在这个地方，被坑了，开始没有放在 afterEvaluate 闭包内，所以一直找不到 release 组件

publishing {
    publications {
        publish2Local(MavenPublication) {
            groupId = def_groupId
            artifactId = def_artifactId
            version = def_version
            afterEvaluate {
                artifact(tasks.getByName("bundleReleaseAar"))//依赖 bundleReleaseAar 任务，并上传其产出的aar
            }
            artifact(androidSourcesJar)//将源码打包进aar，尤其是代码中包含kotlin,不然代码没啥可读性；如果不需要可以去掉,
        }
    }

    repositories {
        maven {
            url = repos
        }
    }
}