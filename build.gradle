// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "test.gradle"
buildscript {
    ext.kotlin_version = "1.4.32"
    ext.argus_version = "4.4.3-rc.1"
    ext.foundation_version = "0.3.1"
    //本地仓库地址
    ext.repos = "D:\\AndroidStudioProjects\\MyTestApplication\\repos"
    println '=== root project dir: ' + rootDir
    println "=== root project dir: " + getProjectDir()
    println '=== root project dir: ' + project.rootDir
    println "=== root project dir: " + project.getProjectDir()
    println '=== root project dir: ' + rootProject.rootDir
    println "=== root project dir: " + rootProject.getProjectDir()
    println "project name = " + name
    println "project name = " + getName()
    println "project name = " + project.getName()
    println "project name = " + rootProject.getName()
    println '=== repos: ' + repos
    println "has property NEXUS_USERNAME = ${project.hasProperty('NEXUS_USERNAME')}, result = ${getProperty("NEXUS_USERNAME")}"
    println "has property NEXUS_PASSWORD = ${project.hasProperty('NEXUS_PASSWORD')}, result = ${getProperty("NEXUS_PASSWORD")}"
    repositories {
        // 声明本地maven仓库的地址
        maven {
            url uri(repos)
        }
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter/' }
        google()
        jcenter()
        maven {
            url "https://artifact.bytedance.com/repository/Volcengine/"
        }
        maven {
            url "https://artifact.bytedance.com/repository/byteX/"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.2.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
        classpath "cn.huolala.asm_plugin:asm:1.2.4-SNAPSHOT"
//        classpath "com.delivery.wp.argus.android.plugin:auto-track:$argus_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        // 声明本地maven仓库的地址
        maven {
            url uri(repos)
        }
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/jcenter/' }
        google()
        jcenter()
        maven {
            url "https://artifact.bytedance.com/repository/Volcengine/"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * 表示本Project "task 依赖关系已经生成"
 */
gradle.taskGraph.whenReady {
    TaskExecutionGraph graph ->
        println "root Project task has create"
}

/**
 * 每一个 Task 任务执行之前回调
 */
gradle.taskGraph.beforeTask {
    Task task ->
        println "root Project[${task.project.name}]--->Task[${task.name}] has invoke and return"
}

/**
 * 每一个 task 执行之后被回调
 */
gradle.taskGraph.afterTask {
    task, TaskState taskState ->
        //第二个参数表示 task 的状态，是可选的参数
        println "root Project[${task.project.name}]--->Task[${task.name}] do finish,taskState[upToDate:${taskState.upToDate},skipped:${taskState.skipped},executed:${taskState.executed},didWork:${taskState.didWork}]"
}